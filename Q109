/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* sortedListToBST(ListNode* head) {
        int len = 0;
        ListNode *p = head;
        while(p != NULL)
        {
            p = p->next;
            len++;
        }
        return sortedListWithLenToBST(head, len);
    }
    
    TreeNode* sortedListWithLenToBST(ListNode* head, int len)
    {
        if(len==0)
            return NULL;
        else if(len==1)
        {
            TreeNode *t = new TreeNode(head->val);
            return t;
        }
        else
        {
            int leftLen = len/2;
            int rightLen = (len-1)/2;
            ListNode *p,*q;
            p = head;
            for(int i=0; i<leftLen-1; i++)
                p = p->next;
            q = p->next;
            p->next = NULL;
            p = q;
            q = q->next;
            
            TreeNode *t = new TreeNode(p->val);
            t->left = sortedListWithLenToBST(head, leftLen);
            t->right = sortedListWithLenToBST(q, rightLen);
            return t;
        }
    }
};