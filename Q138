/*
// Definition for a Node.
class Node {
public:
    int val;
    Node* next;
    Node* random;

    Node() {}

    Node(int _val, Node* _next, Node* _random) {
        val = _val;
        next = _next;
        random = _random;
    }
};
*/
class Solution {
public:
    Node* copyRandomList(Node* head) {
        if(head == NULL)
            return head;
        Node *p,*q;
        Node *newHead;
        p = head;
        while(p!=NULL)
        {
            q = new Node(p->val, p->next, p->random);
            p->next = q;
            p = p->next->next;
        }
        newHead = head->next;
        p = head;
        while(p!=NULL)
        {
            q = p->next;
            if(q->random != NULL)
                q->random = q->random->next;
            p = q->next;
        }
        p = head;
        while(p!=NULL)
        {
            q = p->next;
            p->next = q->next;
            p = p->next;
            if(p!=NULL)
                q->next = p->next;
        }
        return newHead;
    }
};