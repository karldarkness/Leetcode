class Solution {
public:
    string longestPalindrome(string s) {
        int strLen = s.length();
        if(strLen < 2)
            return s;
        
        int len, maxLen=0, maxBegin, maxEnd;
        int begin, end;
        for(int i=0; i<strLen; i++)
        {
            begin = i;
            end = i;
            while(begin>0 && end<strLen-1)
            {
                if(s[begin-1]==s[end+1])
                {
                    begin--;
                    end++;
                }
                else
                    break;
            }
            len = end-begin+1;
            if(len > maxLen)
            {
                maxLen = len;
                maxBegin = begin;
                maxEnd = end;
            }
        }
        
        for(int i=0; i<strLen-1; i++)
        {
            if(s[i]==s[i+1])
            {
                begin = i;
                end = i+1;
                while(begin>0 && end<strLen-1)
                {
                    if(s[begin-1]==s[end+1])
                    {
                        begin--;
                        end++;
                    }
                    else
                        break;
                }
                len = end-begin+1;
                if(len>maxLen)
                {
                    maxLen = len;
                    maxBegin = begin;
                    maxEnd = end;
                }
            }
        }
        return s.substr(maxBegin,maxEnd-maxBegin+1);
    }
};