/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        return addWithCarry(l1, l2, 0);
    }
    
    ListNode* addWithCarry(ListNode* l1, ListNode* l2, int carry) {
        ListNode *p = new ListNode(0);
        if(l1 == NULL && l2 == NULL)
        {
            if(carry)
                p->val = carry;
            else
                return NULL;
        }
        else if(l1 == NULL)
        {
            p->val = l2->val + carry;
            if(p->val >= 10)
            {
                p->val -= 10;
                p->next = addWithCarry(NULL, l2->next, 1);
            }
            else
                p->next = l2->next;
        }
        else if(l2 == NULL)
        {
            p->val = l1->val + carry;
            if(p->val >= 10)
            {
                p->val -= 10;
                p->next = addWithCarry(l1->next, NULL, 1);
            }
            else
                p->next = l1->next;
        }
        else
        {
            p->val = l1->val + l2->val + carry;
            if(p->val >= 10)
            {
                p->val -= 10;
                p->next = addWithCarry(l1->next, l2->next, 1);
            }
            else
                p->next = addWithCarry(l1->next, l2->next, 0);
        }
        return p;
    }
};